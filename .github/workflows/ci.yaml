name: CI

on:
  push:
    branches:
      - 'develop'
      - 'releases/*'
  pull_request:
    branches:
      - 'develop'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Update apt
      run: sudo apt-get update -y
    - name: Install packages
      run: sudo apt-get install -y pkg-config libpango1.0-dev libcairo2-dev libgtk2.0-dev libgtk-3-dev libglib2.0 libxcb1 qt5-default qtbase5-dev qtbase5-private-dev libqt5gui5 cmake libappindicator3-dev
    - name: Show versions
      run: |
        rustc -vV
        cargo -vV
        clang -v
        cmake --version
        
    - name: Build
      run: scripts/build.sh -ad
    - name: Run tests
      run: cargo test --all

  markdown-lint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - run: sudo npm install -g markdownlint-cli
      - run: sudo npm install -g markdown-link-check
      - run: ci/check_md.sh

  cargo-deny:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}

  format:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Check Rustfmt
        run: cargo fmt -- --check

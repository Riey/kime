name: Release

on:
  push:
    tags:
    - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  packaging:
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
      - name: Set VER
        id: version
        run: echo "::set-output name=ver::$(grep '^version =' xtask/Cargo.toml|head -n1|cut -d\" -f2)"
      - name: Update apt
        run: sudo apt-get update -y
      - name: Install packages
        run: sudo apt-get install -y pkg-config libpango1.0-dev libcairo2-dev libgtk2.0-dev libgtk-3-dev libglib2.0 libxcb1 qt5-default qtbase5-dev qtbase5-private-dev libqt5gui5 cmake ninja-build
      - name: Generate package...
        run: cargo xtask build --build-path build XIM GTK3 QT5
      - name: Archiving package...
        run: 7z a build/kime.7z ./build/out/*
      - name: Generate deb package...
        run: cargo xtask release-deb build

      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/kime.7z
          asset_name: kime-${{ steps.version.outputs.ver }}.7z
          asset_content_type: application/x-7z-compressed

      - name: Upload deb package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/kime_${{ steps.version.outputs.ver }}_amd64.deb
          asset_name: kime_${{ steps.version.outputs.ver }}_amd64.deb
          asset_content_type: application/x-xz
  
